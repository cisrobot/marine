# #로컬
# ekf_filter_node_odom:
#   ros__parameters:
#     frequency: 30.0
#     publish_acceleration: false
#     two_d_mode: true
#     publish_tf: true

#      # If you're having trouble, try setting this to true, and then echo the /diagnostics_agg topic to see if the node 
#      # is unhappy with any settings or data.
#     print_diagnostics: true

#     map_frame: map
#     odom_frame: odom
#     base_link_frame: base_link
#     world_frame: odom

#     odom0: /scout_mini_base_controller/odom
#     odom0_config: [true,  true,  false, # X,    Y,      Z
#                       false, false, true, # roll, pitch,  yaw
#                        false,  false, false, # dX,   dY,     dZ
#                       false, false, false,  # droll,dpitch, dyaw
#                       false, false, false] # ddX,  ddY,    ddZ
#     imu0 : /mavros/imu/data
#     imu0_config: [false, false, false,
#                   false, false, true,
#                   false, false, false,
#                   false, false, false,
#                   false, false, false]
#글로벌 
### ekf global config file ###
ekf_filter_node_map:
    ros__parameters:
        # The frequency, in Hz, at which the filter will output a position estimate. Note that the filter will not begin computation until it receives at least one message from one of the inputs. It will then run continuously at the frequency specified here, regardless of whether it receives more measurements. Defaults to 30 if unspecified.
        frequency: 30.0
        
        # ekf_localization_node and ukf_localization_node both use a 3D omnidirectional motion model. If this parameter is set to true, no 3D information will be used in your state estimate. Use this if you are operating in a planar environment and want to ignore the effect of small variations in the ground plane that might otherwise be detected by, for example, an IMU. Defaults to false if unspecified.
        two_d_mode: true

        # Whether to publish the acceleration state. Defaults to false if unspecified.
        publish_acceleration: false

        # Whether to broadcast the transformation over the /tf topic. Defaults to true if unspecified.
        publish_tf: true
        
        # 1. Set the map_frame, odom_frame, and base_link frames to the appropriate frame names for your system.
        #     1a. If your system does not have a map_frame, just remove it, and make sure "world_frame" is set to the value of odom_frame.
        # 2. If you are fusing continuous position data such as wheel encoder odometry, visual odometry, or IMU data, set "world_frame" to your odom_frame value. This is the default behavior for robot_localization's state estimation nodes.
        # 3. If you are fusing global absolute position data that is subject to discrete jumps (e.g., GPS or position updates from landmark observations) then:
        #     3a. Set your "world_frame" to your map_frame value
        #     3b. MAKE SURE something else is generating the odom->base_link transform. Note that this can even be another state estimation node from robot_localization! However, that instance should *not* fuse the global data.
        map_frame: map              # Defaults to "map" if unspecified
        odom_frame: odom            # Defaults to "odom" if unspecified
        base_link_frame: base_link  # Defaults to "base_link" if unspecified
        world_frame: map            # Defaults to the value of odom_frame if unspecified
        
        odom0: /scout_mini_base_controller/odom
        odom0_config: [false,  false,  false, # X,    Y,      Z
                       false, false, false, # roll, pitch,  yaw
                       true,  true, false, # dX,   dY,     dZ
                       false, false, true,  # droll,dpitch, dyaw
                       false, false, false] # ddX,  ddY,    ddZ

        odom1: odometry/gps
        odom1_config: [true,  true,  false,
                       false, false, false,
                       false, false, false,
                       false, false, false,
                       false, false, false]
        odom1_differential: false

        imu0: /mavros/imu/data
        imu0_config: [false, false, false,
                      false,  false,  true,
                      false, false, false,
                      false, false, false,
                      false, false, false]

        # Starts the filter with the specified state. The state is given as a 15-D vector of doubles, in the same order as the sensor configurations. 
        # initial_state: [0.0, 0.0, 0.0,
        #                 0.0, 0.0, 3.14,
        #                 0.0, 0.0, 0.0,
        #                 0.0, 0.0, 0.0,
        #                 0.0, 0.0, 0.0]
#navsat 노드
navsat_transform_node:
  ros__parameters:
    frequency: 20.0
    delay: 3.0
    magnetic_declination_radians: 0.2313
    yaw_offset: 0.0
    zero_altitude: true
    broadcast_cartesian_transform: true
    broadcast_cartesian_transform_as_parent_frame: true
    publish_filtered_gps: true
    use_odometry_yaw: false
    wait_for_datum: false